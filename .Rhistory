links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = importance)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = importance)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,importance), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,importance), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
links %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,n), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
network <- igraph::graph_from_data_frame(d=links, directed=F)
plot(network, edge.width = E(network)$importance/2)
abbreviate('test title one two three')
abbreviate('test title one two three') -> v
v
links$collab <- toupper(abbreviate(links$collab))
network <- igraph::graph_from_data_frame(d=links, directed=F)
plot(network, edge.width = E(network)$importance/2)
links %>%
arrange(desc(n)) %>%
slice(1:50) %>%
ggplot(aes(x = reorder(collab,n), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Structure", title = "Nombre de collaborations nationales")
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup()
links %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,n), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Structure", title = "Nombre de collaborations nationales")
links
n_distinct(links$collab)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
## Manipulation de données
library(tidyverse)
library(purrr)
library(igraph)
## Package pour l'import de .bib
library(bib2df)
library(bibliometrix)
## Thème INRAE
source("R/theme_inrae.R")
# Liste des fichiers bib irsteadoc
list_bib <- list.files(pattern = "\\.bib$")[-1] # Pour ne pas prendre biball
# Import et mise en tableau
bib_df <- purrr::map_df(list_bib,bib2df::bib2df)
bib_df %>% select(NOTE, AUTHOR, TITLE, YEAR) %>%
unnest(AUTHOR) %>%
group_by(YEAR,NOTE) %>%
summarise(n = n_distinct(TITLE)) %>%
ungroup() %>%
arrange(desc(n)) %>%
plot_general <- ggplot(aes(x = reorder(NOTE, n), y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(label = n)) +
facet_wrap(~YEAR, scales = "free") +
guides(fill = FALSE) +
coord_flip() +
theme_inrae() +
labs(title = "Nombre d'entrées bibliographiques par catégorie de document", subtitle = "Tous les agents confondus", caption = "Export IrsteaDoc du 06/02/2020") +
theme(axis.title = element_blank())
bib_df %>% select(NOTE, AUTHOR, TITLE, YEAR) %>%
unnest(AUTHOR) %>%
group_by(YEAR,NOTE) %>%
summarise(n = n_distinct(TITLE)) %>%
ungroup() %>%
arrange(desc(n)) %>%
plot_general <- ggplot(aes(x = reorder(NOTE, n), y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(label = n)) +
facet_wrap(~YEAR, scales = "free") +
guides(fill = FALSE) +
coord_flip() +
theme_inrae() +
labs(title = "Nombre d'entrées bibliographiques par catégorie de document", subtitle = "Tous les agents confondus", caption = "Export IrsteaDoc du 06/02/2020") +
theme(axis.title = element_blank())
bib_df %>% select(NOTE, AUTHOR, TITLE, YEAR) %>%
unnest(AUTHOR) %>%
group_by(YEAR,NOTE) %>%
summarise(n = n_distinct(TITLE)) %>%
ungroup() %>%
arrange(desc(n)) %>%
plot_general <- ggplot(aes(x = reorder(NOTE, n), y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(label = n)) +
facet_wrap(~YEAR, scales = "free") +
guides(fill = FALSE) +
coord_flip() +
theme_inrae() +
labs(title = "Nombre d'entrées bibliographiques par catégorie de document", subtitle = "Tous les agents confondus", caption = "Export IrsteaDoc du 06/02/2020") +
theme(axis.title = element_blank())
plot_general <- bib_df %>% select(NOTE, AUTHOR, TITLE, YEAR) %>%
unnest(AUTHOR) %>%
group_by(YEAR,NOTE) %>%
summarise(n = n_distinct(TITLE)) %>%
ungroup() %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(NOTE, n), y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(label = n)) +
facet_wrap(~YEAR, scales = "free") +
guides(fill = FALSE) +
coord_flip() +
theme_inrae() +
labs(title = "Nombre d'entrées bibliographiques par catégorie de document", subtitle = "Tous les agents confondus", caption = "Export IrsteaDoc du 06/02/2020") +
theme(axis.title = element_blank())
plot_general
save()
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
## Manipulation de données
library(tidyverse)
library(purrr)
library(igraph)
## Package pour l'import de .bib
library(bib2df)
library(bibliometrix)
## Thème INRAE
source("R/theme_inrae.R")
# Liste des fichiers bib irsteadoc
list_bib <- list.files(pattern = "\\.bib$")[-1] # Pour ne pas prendre biball
# Import et mise en tableau
bib_df <- purrr::map_df(list_bib,bib2df::bib2df)
plot_general <- bib_df %>% select(NOTE, AUTHOR, TITLE, YEAR) %>%
unnest(AUTHOR) %>%
group_by(YEAR,NOTE) %>%
summarise(n = n_distinct(TITLE)) %>%
ungroup() %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(NOTE, n), y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(label = n)) +
facet_wrap(~YEAR, scales = "free") +
guides(fill = FALSE) +
coord_flip() +
theme_inrae() +
labs(title = "Nombre d'entrées bibliographiques par catégorie de document", subtitle = "Tous les agents confondus", caption = "Export IrsteaDoc du 06/02/2020") +
theme(axis.title = element_blank())
plot_general
plot_ACL <- bib_df %>% select(NOTE, AUTHOR, TITLE, YEAR) %>%
unnest(AUTHOR) %>%
group_by(YEAR, NOTE) %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes")) %>%
summarise(n = n_distinct(TITLE)) %>%
mutate(n_publi = sum(n)) %>%
ungroup() %>%
arrange(YEAR) %>%
mutate(YEAR = as.character(YEAR)) %>%
ggplot(aes(x = YEAR, y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(y = n_publi,label = n_publi), size = 6) +
scale_fill_inrae(name = "Catégorie")+
theme_inrae() +
theme(axis.title.x = element_blank())+
labs(title = "Nombre d'ACL par année", subtitle = "Tous les agents confondus", y = "Nombre d'ACL")
plot_ACL
# Il y 5 entrées qui sont problématiques (pas le meme nombre d'auteur et d"affilliation, qui sont les critères que j'utilise) et à corriger manuellement (pour le moment retirées) :
a_traiter <-  c("PUB00057566","PUB00057565","PUB00061139","PUB00063885","PUB00056781")
auteurs_ETBX <- bib_df %>%
select(AUTHOR,AFFILIATION, BIBTEXKEY) %>%
filter(!BIBTEXKEY %in% a_traiter) %>%
rowwise() %>%
mutate(AFFILIATION = list(as.list(strsplit(AFFILIATION, ";")[[1]]))) %>%
unnest() %>%
unnest() %>%
mutate(AFFILIATION = str_trim(AFFILIATION)) %>%
filter(AFFILIATION %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
distinct(AUTHOR) %>%
pull()
auteurs_ETBX
## J'ai retrouvé quelques DOI à la main
complement_doi <- read_csv2("complement_doi.csv")
## Ces 16 entrées ne sont que dans HAL (aucune info citation)
doi_hal <- complement_doi %>% filter(str_detect(DOI,"hal-"))
## Ces entrées ont un DOI OK à ajouter
doi_ok <- complement_doi %>% filter(str_detect(DOI,"10.")) %>% select(-citations)
## Ces entrées n'ont pas de DOI mais j'ai relevé quand c'était possible leur nombre de citations
citations <- complement_doi %>% filter(!is.na(citations)) %>% rename(nb_citations=citations) %>%
select(BIBTEXKEY,nb_citations)
base_doi <- bib_df %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes")) %>%
select(BIBTEXKEY,AUTHOR,TITLE,DOI) %>%
mutate(DOI = str_remove_all(DOI,"http://dx.doi.org/")) %>%
filter(!BIBTEXKEY %in% doi_ok$BIBTEXKEY) %>%
bind_rows(doi_ok) %>% drop_na(DOI)
## Voici la requête à effectuer sur Scopus > Advanced
Scopus_Request <- base_doi %>%
mutate(request = paste0("DOI(",DOI,")")) %>%
pull(request) %>%
paste0(collapse = " OR ")
## On lit l'export Scopus
scopus_data_raw <- bibliometrix::readFiles("bdd_biblio/scopus_doi.bib") %>%
bibliometrix::convert2df(dbsource = "scopus", format = "bibtex")
scopus_data <- scopus_data_raw  %>% tbl_df() %>%
select(DOI = DI,nb_citations = TC) %>%
arrange(desc(nb_citations))
## On refait la jointure avec les données initiales, et on ajoute les données de citation
new_bib_df <- scopus_data %>%
mutate(DOI = tolower(DOI)) %>%
inner_join(base_doi %>% mutate(DOI = tolower(DOI)), by = "DOI") %>%
select(BIBTEXKEY,nb_citations) %>%
bind_rows(citations) %>%
full_join(bib_df, by = "BIBTEXKEY") %>%
unique()
nb_citations_an <- new_bib_df %>% group_by(YEAR) %>% summarise(nb_citations = sum(nb_citations,na.rm=TRUE))
nb_citations_an
# On enlève 2020 car plombe le résultat.
nb_moy_citation_an <- mean(nb_citations_an$nb_citations[-4])
nb_moy_citation_an
vec_affiliations <- new_bib_df %>%
select(AFFILIATION) %>%
mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>%
unlist()
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup()
n_distinct(links$collab)
links %>%
arrange(desc(n)) %>%
slice(1:10) %>%
collab_10_FRA <- ggplot(aes(x = reorder(collab,n), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Structure", title = "Nombre de collaborations nationales")
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
## Manipulation de données
library(tidyverse)
library(purrr)
library(igraph)
## Package pour l'import de .bib
library(bib2df)
library(bibliometrix)
## Thème INRAE
source("R/theme_inrae.R")
# Liste des fichiers bib irsteadoc
list_bib <- list.files(pattern = "\\.bib$")[-1] # Pour ne pas prendre biball
# Import et mise en tableau
bib_df <- purrr::map_df(list_bib,bib2df::bib2df)
plot_general <- bib_df %>% select(NOTE, AUTHOR, TITLE, YEAR) %>%
unnest(AUTHOR) %>%
group_by(YEAR,NOTE) %>%
summarise(n = n_distinct(TITLE)) %>%
ungroup() %>%
arrange(desc(n)) %>%
ggplot(aes(x = reorder(NOTE, n), y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(label = n)) +
facet_wrap(~YEAR, scales = "free") +
guides(fill = FALSE) +
coord_flip() +
theme_inrae() +
labs(title = "Nombre d'entrées bibliographiques par catégorie de document", subtitle = "Tous les agents confondus", caption = "Export IrsteaDoc du 06/02/2020") +
theme(axis.title = element_blank())
plot_general
plot_ACL <- bib_df %>% select(NOTE, AUTHOR, TITLE, YEAR) %>%
unnest(AUTHOR) %>%
group_by(YEAR, NOTE) %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes")) %>%
summarise(n = n_distinct(TITLE)) %>%
mutate(n_publi = sum(n)) %>%
ungroup() %>%
arrange(YEAR) %>%
mutate(YEAR = as.character(YEAR)) %>%
ggplot(aes(x = YEAR, y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(y = n_publi,label = n_publi), size = 6) +
scale_fill_inrae(name = "Catégorie")+
theme_inrae() +
theme(axis.title.x = element_blank())+
labs(title = "Nombre d'ACL par année", subtitle = "Tous les agents confondus", y = "Nombre d'ACL")
plot_ACL
# Il y 5 entrées qui sont problématiques (pas le meme nombre d'auteur et d"affilliation, qui sont les critères que j'utilise) et à corriger manuellement (pour le moment retirées) :
a_traiter <-  c("PUB00057566","PUB00057565","PUB00061139","PUB00063885","PUB00056781")
auteurs_ETBX <- bib_df %>%
select(AUTHOR,AFFILIATION, BIBTEXKEY) %>%
filter(!BIBTEXKEY %in% a_traiter) %>%
rowwise() %>%
mutate(AFFILIATION = list(as.list(strsplit(AFFILIATION, ";")[[1]]))) %>%
unnest() %>%
unnest() %>%
mutate(AFFILIATION = str_trim(AFFILIATION)) %>%
filter(AFFILIATION %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
distinct(AUTHOR) %>%
pull()
auteurs_ETBX
## J'ai retrouvé quelques DOI à la main
complement_doi <- read_csv2("complement_doi.csv")
## Ces 16 entrées ne sont que dans HAL (aucune info citation)
doi_hal <- complement_doi %>% filter(str_detect(DOI,"hal-"))
## Ces entrées ont un DOI OK à ajouter
doi_ok <- complement_doi %>% filter(str_detect(DOI,"10.")) %>% select(-citations)
## Ces entrées n'ont pas de DOI mais j'ai relevé quand c'était possible leur nombre de citations
citations <- complement_doi %>% filter(!is.na(citations)) %>% rename(nb_citations=citations) %>%
select(BIBTEXKEY,nb_citations)
base_doi <- bib_df %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes")) %>%
select(BIBTEXKEY,AUTHOR,TITLE,DOI) %>%
mutate(DOI = str_remove_all(DOI,"http://dx.doi.org/")) %>%
filter(!BIBTEXKEY %in% doi_ok$BIBTEXKEY) %>%
bind_rows(doi_ok) %>% drop_na(DOI)
## Voici la requête à effectuer sur Scopus > Advanced
Scopus_Request <- base_doi %>%
mutate(request = paste0("DOI(",DOI,")")) %>%
pull(request) %>%
paste0(collapse = " OR ")
## On lit l'export Scopus
scopus_data_raw <- bibliometrix::readFiles("bdd_biblio/scopus_doi.bib") %>%
bibliometrix::convert2df(dbsource = "scopus", format = "bibtex")
scopus_data <- scopus_data_raw  %>% tbl_df() %>%
select(DOI = DI,nb_citations = TC) %>%
arrange(desc(nb_citations))
## On refait la jointure avec les données initiales, et on ajoute les données de citation
new_bib_df <- scopus_data %>%
mutate(DOI = tolower(DOI)) %>%
inner_join(base_doi %>% mutate(DOI = tolower(DOI)), by = "DOI") %>%
select(BIBTEXKEY,nb_citations) %>%
bind_rows(citations) %>%
full_join(bib_df, by = "BIBTEXKEY") %>%
unique()
nb_citations_an <- new_bib_df %>% group_by(YEAR) %>% summarise(nb_citations = sum(nb_citations,na.rm=TRUE))
nb_citations_an
# On enlève 2020 car plombe le résultat.
nb_moy_citation_an <- mean(nb_citations_an$nb_citations[-4])
nb_moy_citation_an
vec_affiliations <- new_bib_df %>%
select(AFFILIATION) %>%
mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>%
unlist()
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup()
n_distinct(links$collab)
collab_10_FRA <- links %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,n), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Structure", title = "Nombre de collaborations nationales")
collab_10_FRA
links$collab <- toupper(abbreviate(links$collab))
network <- igraph::graph_from_data_frame(d=links, directed=F)
plot(network, edge.width = E(network)$importance/2)
vec_affiliations <- new_bib_df %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes")) %>%
select(AFFILIATION) %>%
mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>%
unlist()
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
mutate(collab_country = toupper(collab_country)) %>%
group_by(origin_country) %>%
count(collab_country) %>%
ungroup() %>%
select(origin_country,collab_country,importance=n) %>%
filter(!collab_country %in% c("FRA","-")) %>%
mutate(origin_country = recode(origin_country,"FRA"="ETBX"))
n_distinct(links$collab_country)
collab_10_INT <- links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = importance)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Top 10 des pays collaborateurs")
collab_10_INT
network <- igraph::graph_from_data_frame(d=links, directed=F)
plot(network, edge.width = E(network)$importance/2)
save(collab_10_FRA,collab_10_INT,nb_citations_an,plot_ACL,plot_general, file = "export_dashboard.RData")
library(flexdashboard)
load("export_dashboard.RData")
?ggplotly
library(plotly)
?ggplotly
500/5*100
5/500*100
bib_df
bib_df %>% tbl_df()
library(tidyverse)
bib_df
bib_df$KEY
bib_df$KEYWORDS
?select
bib_df %>% select(contains("KEYWORD"))
bib_df %>% select(contains("KEYWORD")) %>% filter(!is.na(KEYWORDS.2))
bib_df %>% select(contains("KEYWORD")) %>% filter(!is.na(KEYWORDS.3))
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
bib_df %>% select(KEYWORDS)
bib_df %>% unique() %>% pull(KEYWORDS)
bib_df %>% unique() %>% mutate(KEYWORDS = str_split(KEYWORDS," ; "))
bib_df %>% unique() %>% sslect(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; "))
bib_df %>% unique() %>% select(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; "))
bib_df %>% unique() %>% select(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; ")) %>%
pull(KEYWORDS)
bib_df %>% unique() %>% select(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; ")) %>%
pull(KEYWORDS) %>% unlist()
bib_df %>% unique() %>% select(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; ")) %>%
pull(KEYWORDS) %>% unlist() %>% na.omit()
bib_df %>% unique() %>% select(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; ")) %>%
pull(KEYWORDS) %>% unlist() %>% na.omit()
bib_df %>% unique() %>% select(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; ")) %>%
pull(KEYWORDS) %>% unlist()
bib_df %>% unique() %>% select(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; ")) %>%
pull(KEYWORDS) %>% unlist() %>% drop_na()
vec_keywords <- bib_df %>% unique() %>% select(KEYWORDS) %>% mutate(KEYWORDS = str_split(KEYWORDS," ; ")) %>%
pull(KEYWORDS) %>% unlist()
tibble(keyword = vec_keywords) %>%
count(keyword)
tibble(keyword = vec_keywords) %>%
count(keyword) %>%
arrange(desc(n))
tibble(keyword = vec_keywords) %>%
count(keyword) %>%
arrange(desc(n))
tibble(keyword = vec_keywords) %>%
count(keyword) %>%
arrange(desc(n))
word_count <- tibble(keyword = vec_keywords) %>%
count(keyword) %>%
arrange(desc(n))
library(wordcloud2)
wordcloud2(word_cound)
wordcloud2(word_count)
?wordcloud2
wordcloud2(word_count, shape = "circle")
wordcloud2(word_count, shape = "pentagon")
wordcloud2(word_count)
wordcloud2(word_count,size = 2)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
wordcloud2(word_count,size = 0.5)
R.version
