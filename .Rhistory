arrange(YEAR) %>%
mutate(YEAR = as.character(YEAR)) %>%
ggplot(aes(x = YEAR, y = n)) +
geom_col(color = "black", aes(fill = NOTE))+
geom_label(aes(y = n_publi,label = n_publi), size = 6) +
scale_fill_inrae(name = "Catégorie")+
theme_inrae() +
theme(axis.title.x = element_blank())+
labs(title = "Nombre d'ACL par année", subtitle = "Tous les agents confondus", y = "Nombre d'ACL")  +
ggsave("Figures/Barplot_ACL_Annee.png", dpi = "retina", width = 13.2, height = 8.79)
# Il y 5 entrées qui sont problématiques (pas le meme nombre d'auteur et d"affilliation, qui sont les critères que j'utilise) et à corriger manuellement (pour le moment retirées) :
a_traiter <-  c("PUB00057566","PUB00057565","PUB00061139","PUB00063885","PUB00056781")
auteurs_ETBX <- bib_df %>%
select(AUTHOR,AFFILIATION, BIBTEXKEY) %>%
filter(!BIBTEXKEY %in% a_traiter) %>%
rowwise() %>%
mutate(AFFILIATION = list(as.list(strsplit(AFFILIATION, ";")[[1]]))) %>%
unnest() %>%
unnest() %>%
mutate(AFFILIATION = str_trim(AFFILIATION)) %>%
filter(AFFILIATION %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
distinct(AUTHOR) %>%
pull()
top_10_auteurs <- bib_df %>%
select(BIBTEXKEY,NOTE, AUTHOR, TITLE, YEAR, AFFILIATION) %>%
unnest(AUTHOR) %>%
filter(AUTHOR %in% auteurs_ETBX) %>%
group_by(AUTHOR) %>%
summarise(n_key = n_distinct(BIBTEXKEY)) %>%
ungroup() %>%
arrange(desc(n_key)) %>%
slice(1:10) %>% pull(AUTHOR)
## 3.1 Top d'entrées par auteur ETBX
bib_df %>% select(BIBTEXKEY,NOTE, AUTHOR, TITLE, YEAR, AFFILIATION) %>%
unnest(AUTHOR) %>%
filter(AUTHOR %in% auteurs_ETBX) %>%
group_by(AUTHOR) %>%
summarise(n_key = n_distinct(BIBTEXKEY)) %>%
ungroup() %>%
arrange(desc(n_key)) %>%
filter(AUTHOR %in% top_10_auteurs) %>%
ggplot(aes(x = reorder(AUTHOR, n_key), y =  n_key)) +
geom_col(fill = "#00a3a6", color = "black") +
geom_label(aes(label = n_key)) +
coord_flip() +
guides(fill = FALSE) +
theme_inrae() +
labs(y = "Nombre d'entrées")+
theme(axis.title.y = element_blank())
## 3.2 Top d'ACL par auteur ETBX
bib_df %>% select(BIBTEXKEY,NOTE, AUTHOR, TITLE, YEAR, AFFILIATION) %>%
unnest(AUTHOR) %>%
filter(AUTHOR %in% auteurs_ETBX) %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes")) %>%
group_by(AUTHOR) %>%
summarise(n_key = n_distinct(BIBTEXKEY)) %>%
ungroup() %>%
arrange(desc(n_key)) %>%
filter(AUTHOR %in% top_10_auteurs) %>%
ggplot(aes(x = reorder(AUTHOR, n_key), y =  n_key)) +
geom_col(fill = "#00a3a6", color = "black") +
geom_label(aes(label = n_key)) +
coord_flip() +
guides(fill = FALSE) +
theme_inrae() +
labs(y = "Nombre d'ACL")+
theme(axis.title.y = element_blank())
## J'ai retrouvé quelques DOI à la main
complement_doi <- read_csv2("complement_doi.csv")
## Ces 16 entrées ne sont que dans HAL (aucune info citation)
doi_hal <- complement_doi %>% filter(str_detect(DOI,"hal-"))
## Ces entrées ont un DOI OK à ajouter
doi_ok <- complement_doi %>% filter(str_detect(DOI,"10.")) %>% select(-citations)
## Ces entrées n'ont pas de DOI mais j'ai relevé quand c'était possible leur nombre de citations
citations <- complement_doi %>% filter(!is.na(citations)) %>% rename(nb_citations=citations) %>%
select(BIBTEXKEY,nb_citations)
## Base des DOI actualisée
base_doi <- bib_df %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes","Article de revue technique à comité de lecture")) %>%
select(BIBTEXKEY,AUTHOR,TITLE,DOI) %>%
mutate(DOI = str_remove_all(DOI,"http://dx.doi.org/")) %>%
filter(!BIBTEXKEY %in% doi_ok$BIBTEXKEY) %>%
bind_rows(doi_ok) %>% drop_na(DOI)
## Voici la requête à effectuer sur Scopus > Advanced
Scopus_Request <- base_doi %>%
mutate(request = paste0("DOI(",DOI,")")) %>%
pull(request) %>%
paste0(collapse = " OR ")
scopus_data_raw <- bibliometrix::readFiles("bdd_biblio/scopus_doi.bib") %>%
bibliometrix::convert2df(dbsource = "scopus", format = "bibtex")
scopus_data_raw
scopus_data_raw %>% tbl_df()
## On refait la jointure avec les données initiales, et on ajoute les données de citation
new_bib_df <- scopus_data %>%
mutate(DOI = tolower(DOI)) %>%
inner_join(base_doi %>% mutate(DOI = tolower(DOI)), by = "DOI") %>%
select(BIBTEXKEY,nb_citations) %>%
bind_rows(citations) %>%
full_join(bib_df, by = "BIBTEXKEY")
new_bib_df %>% count(citations)
new_bib_df %>% count(nb_citations)
new_bib_df %>% count(is.na(nb_citations))
new_bib_df
new_bib_df %>% n_distinct(BIBTEXKEY)
new_bib_df %>% distinct(BIBTEXKEY)
new_bib_df %>% unique()
## On refait la jointure avec les données initiales, et on ajoute les données de citation
new_bib_df <- scopus_data %>%
mutate(DOI = tolower(DOI)) %>%
inner_join(base_doi %>% mutate(DOI = tolower(DOI)), by = "DOI") %>%
select(BIBTEXKEY,nb_citations) %>%
bind_rows(citations) %>%
full_join(bib_df, by = "BIBTEXKEY") %>%
unique()
list_bib <- list.files(pattern = "\\.bib$")
# Liste des fichiers bib irsteadoc
list_bib <- list.files(pattern = "\\.bib$")[-1]
# Liste des fichiers bib irsteadoc
list_bib <- list.files(pattern = "\\.bib$")[-1] # Pour ne pas prendre biball
# Import et mise en tableau
bib_df <- purrr::map_df(list_bib,bib2df::bib2df)
## On refait la jointure avec les données initiales, et on ajoute les données de citation
new_bib_df <- scopus_data %>%
mutate(DOI = tolower(DOI)) %>%
inner_join(base_doi %>% mutate(DOI = tolower(DOI)), by = "DOI") %>%
select(BIBTEXKEY,nb_citations) %>%
bind_rows(citations) %>%
full_join(bib_df, by = "BIBTEXKEY") %>%
unique()
new_bib_df
new_bib_df %>% count(NOTE)
96+29
new_bib_df %>% count(is.na(nb_citations))
# 4.2 Statistiques sur les citations --------------------------------------
nb_citations_an <- new_bib_df %>% group_by(YEAR) %>% summarise(nb_citations = sum(nb_citations,na.rm=TRUE))
nb_moy_citation_an <- mean(nb_citations_an$nb_citations[-4]) # On enlève 2020 car plombe le résultat.
new_bib_df
new_bib_df %>% select(ORGANIZATION)
new_bib_df %>% select(AFFILIATION)
knitr::opts_chunk$set(echo = TRUE, warning = FALSE, message = FALSE)
new_bib_df %>% select(AFFILIATION) %>% mutate(delinked = str_split(AFFILIATION, " ; "))
new_bib_df %>% select(AFFILIATION) %>% mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked)
new_bib_df %>% select(AFFILIATION) %>% mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>% unlist()
new_bib_df %>% select(AFFILIATION) %>% mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>% unlist() %>% count()
vec_affiliations <- new_bib_df %>% select(AFFILIATION) %>% mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>% unlist()
vec_affiliations
vec_affiliations <- new_bib_df %>% select(AFFILIATION) %>% mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>% unlist()
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations)
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA"))
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA"))
devtools::install_github('thomasp85/ggraph')
library(igraph)
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA"))
network <- igraph::graph_from_data_frame(d=links, directed=F)
plot(network)
plot(network)
plot(network, layout=layout.random, main="random")
links
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3))
links
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3))
links
network <- igraph::graph_from_data_frame(d=links[,3:4], directed=F)
plot(network)
plot(network)
links %>% group_by(origin_country) %>% count(collab_country)
links %>% group_by(origin_country) %>% count(collab_country) %>% arrange(desc(n))
links %>% group_by(origin_country) %>% count(collab_country) %>% arrange(desc(n)) %>% ungroup()
links2 <- links %>% group_by(origin_country) %>% count(collab_country) %>% arrange(desc(n)) %>% ungroup()
network <- igraph::graph_from_data_frame(d=links[,3:4], directed=F)
links2 <- links %>% group_by(origin_country) %>% count(collab_country) %>% arrange(desc(n)) %>% ungroup() %>% select(origin_country,collab_country,importance=n)
network <- igraph::graph_from_data_frame(d=links2, directed=F)
plot(network)
network <- igraph::graph_from_data_frame(d=links2, directed=F,edge.width=E(network)$importance*2)
network <- igraph::graph_from_data_frame(d=links2, directed=F)
plot(network, edge.width=E(network)$importance*2 )
plot(network, edge.width=E(network)$importance*2 )
E
?E
plot(network, edge.width=E(network)$importance)
plot(network, edge.width=E(network)$importance)
network <- igraph::graph_from_data_frame(d=links2, directed=T)
plot(network, edge.width=E(network)$importance)
plot(network)
network <- igraph::graph_from_data_frame(d=links2, directed=F)
plot(network)
plot(network)
links2
links2 <- links %>%
mutate(collab_country = toupper(collab_country)) %>%
group_by(origin_country) %>% count(collab_country) %>% arrange(desc(n)) %>% ungroup() %>% select(origin_country,collab_country,importance=n) %>%
filter(collab_country %in% c(!"FRA","-"))
links2 <- links %>%
mutate(collab_country = toupper(collab_country)) %>%
group_by(origin_country) %>% count(collab_country) %>% arrange(desc(n)) %>% ungroup() %>% select(origin_country,collab_country,importance=n) %>%
filter(!collab_country %in% c("FRA","-"))
network <- igraph::graph_from_data_frame(d=links2, directed=F)
plot(network)
plot(network)
plot(network, edge.width = E(network$importance))
network <- igraph::graph_from_data_frame(d=links2, directed=F)
plot(network, edge.width = E(network)$importance)
plot(network,layout=layout.fruchterman.reingold, edge.width = E(network)$importance)
plot(network,layout=layout.fruchterman.reingold, edge.width = E(network)$importance)
plot(network,layout=layout.random, edge.width = E(network)$importance)
plot(network,layout=layout.random, edge.width = E(network)$importance)
plot(network,layout=layout.sphere, edge.width = E(network)$importance)
plot(network,layout=layout.circle, edge.width = E(network)$importance)
plot(network, edge.width = E(network)$importance)
plot(network,layout=layout.random, edge.width = E(network)$importance/2)
plot(network,layout=layout.random, edge.width = E(network)$importance/2)
plot(network, edge.width = E(network)$importance/2)
plot(network, edge.width = E(network)$importance/4)
links2 <- links %>%
mutate(collab_country = toupper(collab_country)) %>%
group_by(origin_country) %>% count(collab_country) %>% arrange(desc(n)) %>% ungroup() %>% select(origin_country,collab_country,importance=n) %>%
filter(!collab_country %in% c("FRA","-")) %>%
mutate(origin_country = recode(origin_country,"FRA"="ETBX")) %>%
mutate(colors = "blue")
network <- igraph::graph_from_data_frame(d=links2, directed=F)
plot(network, edge.width = E(network)$importance/2, vertex.color = colors)
links2
V(network)
V(network)$importance
plot(network, edge.width = E(network)$importance/2)
plot(network, edge.width = E(network)$importance/2)
links
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
mutate(collab_country = toupper(collab_country)) %>%
group_by(origin_country) %>%
count(collab_country) %>%
ungroup() %>%
select(origin_country,collab_country,importance=n) %>%
filter(!collab_country %in% c("FRA","-")) %>%
mutate(origin_country = recode(origin_country,"FRA"="ETBX"))
links
top_10_country <- top_n(links,collab_country,importance)
top_10_country
top_10_country <- links %>% top_n(collab_country,importance, 10)
?top_n
top_10_country <- links %>% dplyr::top_n(collab_country,importance, 10)
top_10_country <- links %>% dplyr::top_n(10,importance)
top_10_country
top_10_country %>% arrange(desc(n))
top_10_country %>% arrange(desc(importance))
top_10_country <- links %>%
arrange(desc(importance)) %>%
slice(1:10)
top_10_country
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = collab_country, y = importance)) +
geom_col() +
coord_flip() +
theme_inrae()
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
coord_flip() +
theme_inrae()
vec_affiliations <- new_bib_df %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes")) %>%
select(AFFILIATION) %>%
mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>%
unlist()
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
mutate(collab_country = toupper(collab_country)) %>%
group_by(origin_country) %>%
count(collab_country) %>%
ungroup() %>%
select(origin_country,collab_country,importance=n) %>%
filter(!collab_country %in% c("FRA","-")) %>%
mutate(origin_country = recode(origin_country,"FRA"="ETBX"))
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
coord_flip() +
theme_inrae() +
labs(x = "Nombre de co-publications", y = )
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
coord_flip() +
theme_inrae() +
labs(x = "Nombre de co-publications", y = "Pays")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = importance)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays")
vec_affiliations <- new_bib_df %>%
filter(NOTE %in% c("Article de revue scientifique à comité de lecture","Communication scientifique avec actes")) %>%
select(AFFILIATION) %>%
mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>%
unlist()
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA"))
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA"))
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA")
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup()
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA")
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup()
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup() %>% arrange(desc(n))
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup() %>% arrange(desc(n)) %>% slice(1:10)
vec_affiliations <- new_bib_df %>%
select(AFFILIATION) %>%
mutate(delinked = str_split(AFFILIATION, " ; ")) %>%
pull(delinked) %>%
unlist()
tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup()
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup() %>%
arrange(desc(n)) %>%
slice(1:10)
links
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup()
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab_country,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = importance)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,importance), y = importance)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = importance)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,importance), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
links %>%
arrange(desc(importance)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,importance), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
links %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,n), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Pays", title = "Nombre de collaborations pour des ACL à l'international")
network <- igraph::graph_from_data_frame(d=links, directed=F)
plot(network, edge.width = E(network)$importance/2)
abbreviate('test title one two three')
abbreviate('test title one two three') -> v
v
links$collab <- toupper(abbreviate(links$collab))
network <- igraph::graph_from_data_frame(d=links, directed=F)
plot(network, edge.width = E(network)$importance/2)
links %>%
arrange(desc(n)) %>%
slice(1:50) %>%
ggplot(aes(x = reorder(collab,n), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Structure", title = "Nombre de collaborations nationales")
links <- tibble(origin = "INRAE BORDEAUX UR ETBX FRA", collab = vec_affiliations) %>%
filter(!collab %in% c("IRSTEA BORDEAUX UR ETBX FRA","INRAE BORDEAUX UR ETBX FRA")) %>%
mutate(origin_country = str_sub(origin, start= -3)) %>%
mutate(collab_country = str_sub(collab, start= -3)) %>%
filter(collab_country == "FRA") %>%
select(-origin_country,-collab_country) %>%
group_by(origin) %>%
count(collab) %>%
ungroup()
links %>%
arrange(desc(n)) %>%
slice(1:10) %>%
ggplot(aes(x = reorder(collab,n), y = n)) +
geom_col(fill = "#00a3a6", color ="black") +
geom_label(aes(label = n)) +
coord_flip() +
theme_inrae() +
labs(y = "Nombre de co-publications", x = "Structure", title = "Nombre de collaborations nationales")
links
n_distinct(links$collab)
